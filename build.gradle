plugins {
    id 'java'
    id "io.qameta.allure" version "2.11.2"
}

group 'org.example'
version '1.0-SNAPSHOT'

def allureVersion = "2.20.1"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

dependencies {
    testImplementation (
            'org.junit.jupiter:junit-jupiter-api:5.9.2',
            'com.codeborne:selenide:6.11.2',
            'com.github.javafaker:javafaker:1.0.2',
            'io.qameta.allure:allure-selenide:2.20.1',
            'org.junit.jupiter:junit-jupiter:5.9.0',
            'org.slf4j:slf4j-simple:1.7.32',
            'io.github.bonigarcia:webdrivermanager:5.2.1',
            'org.aeonbits.owner:owner:1.0.12',
            'io.rest-assured:rest-assured:5.3.0',
            'io.qameta.allure:allure-rest-assured:2.20.1',
            'com.fasterxml.jackson.core:jackson-databind:2.14.1',
            'io.appium:java-client:8.3.0'
    )
    testRuntimeOnly (
            'org.junit.jupiter:junit-jupiter-engine:5.9.2',
            'org.slf4j:slf4j-simple:2.0.5'
    )

    testCompileOnly (
            'org.projectlombok:lombok:1.18.24'
    )

    testAnnotationProcessor (
            'org.projectlombok:lombok:1.18.24'
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task android(type: Test) {
    useJUnitPlatform {
        includeTags("android")
    }
}

task ios(type: Test) {
    useJUnitPlatform {
        includeTags("ios")
    }
}
